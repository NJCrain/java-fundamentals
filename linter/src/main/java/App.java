import java.io.BufferedReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {

    public static void main(String[] args) {
        Path gates = Paths.get("resources/gates.js");
        linter(gates);
    }

    /*TODO: Write a method that reads a JavaScript file with a given Path, and prints an error whenever it finds a line that doesn’t end in a semi-colon.
    TODO Read through the file line by line. Print an error message such as "Line 3: Missing semicolon." if a line is missing a semicolon.
    TODO Don’t show an error if the line is empty.
    TODO Don’t show an error if the line ends with an opening curly brace {
    TODO Don’t show an error if the line ends with an closing curly brace }
    TODO Don’t show an error if the line contains if or else
    */

    public static void linter(Path file) {
        try(BufferedReader reader = Files.newBufferedReader(file)) {
            String currentLine = "";
            int line = 1;
            while (currentLine != null) {
                //check for semi-colons based on above requirements
                if (!currentLine.isEmpty() && !currentLine.endsWith("{") && !currentLine.endsWith("}") && !currentLine.contains("if") && !currentLine.contains("else")) {
                    System.out.println("Line " + line + ": Missing a semicolon");
                }

                line++;
                currentLine = reader.readLine();
            }
        }
        catch(IOException e) {
            System.out.println(e);
        }
    }
}
