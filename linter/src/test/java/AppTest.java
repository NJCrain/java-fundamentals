/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.nio.file.Path;
import java.nio.file.Paths;

import static org.junit.Assert.*;

public class AppTest {

    private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();
    private final ByteArrayOutputStream errContent = new ByteArrayOutputStream();
    private final PrintStream originalOut = System.out;
    private final PrintStream originalErr = System.err;

    @Before
    public void setUpStreams() {
        System.setOut(new PrintStream(outContent));
        System.setErr(new PrintStream(errContent));
    }

    @After
    public void restoreStreams() {
        System.setOut(originalOut);
        System.setErr(originalErr);
    }

    /*
    * TODO: Test the linter on an empty file.
    */
    @Test public void testJSLinterNoErrors() {
        Path file = Paths.get("resources/app.js");
        App.jsLinter(file);
        assertEquals("", outContent.toString());
    }

    @Test public void testJSLinterOneError() {
        Path file = Paths.get("resources/one_error.js");
        App.jsLinter(file);
        assertEquals("Line 47: Missing semicolon\n", outContent.toString());
    }

    @Test public void testJSLinterFewErrors() {
        Path file = Paths.get("resources/few_errors.js");
        App.jsLinter(file);
        assertEquals("Line 7: Missing semicolon\nLine 22: Missing semicolon\nLine 47: Missing semicolon\nLine 63: Missing semicolon\n", outContent.toString());
    }

    @Test public void testJSLinterManyErrors() {
        Path file = Paths.get("resources/many_errors.js");
        App.jsLinter(file);
        assertEquals("Line 7: Missing semicolon\nLine 22: Missing semicolon\nLine 37: Missing semicolon\nLine 40: Missing semicolon\nLine 47: Missing semicolon\nLine 56: Missing semicolon\nLine 63: Missing semicolon\nLine 75: Missing semicolon\n", outContent.toString());
    }

    @Test public void testJSLinterEmptyFile() {
        Path file = Paths.get("resources/empty_file.js");
        App.jsLinter(file);
        assertEquals("", outContent.toString());
    }
}
